name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', 3.11]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test imports
      run: |
        python -c "import networks.bitcoin_like; print('Bitcoin module OK')"
        python -c "import networks.ethereum; print('Ethereum module OK')"
        python -c "import networks.tron; print('Tron module OK')"
        python -c "import networks.optimized; print('Optimized module OK')"
        
    - name: Test basic functionality
      run: |
        python max_core_generator.py --currency BTC --prefix 1 --count 1 --workers 2
        
    - name: Check code syntax
      run: |
        python -m py_compile max_core_generator.py
        python -m py_compile batch_vanity_generator.py
        python -m py_compile networks/*.py

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install security tools
      run: |
        pip install bandit safety
        
    - name: Run security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
